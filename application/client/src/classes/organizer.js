import {Contact} from "./contact";

/**
 *@classdesc A class that holds all the information for an Organizer. Akin to a user in the system.
 */
export class Organizer extends Contact {

    /**
     *
     * @param {int}organizerID
     * The ID for the organizer. Generated by the database.
     * @param {int}contactID
     * The ID for the contact object for the organizer. Generated by the database.
     * @param {String}name
     * The name of the organizer.
     * @param {String}phone
     * The phone nr. for the organizer.
     * @param {String}email
     * The mail for the organizer.
     * @param {String}username
     * The username for the organizer.
     * @param {PictureElement}pictureLink
     * Link to the userprofile picture for the organizer.
     *
     */
    constructor(organizerID, contactID, name, phone, email, username, pictureLink) {
        super(contactID, name, phone, email);
        this.organizerID = organizerID;
        this.username = username;
        this.pictureLink = pictureLink;
        this.events = [];
        this.contacts = [];
        this.crewCategories = [];
    }

    addEvent(event) {
        this.events.push(event);
    }

    checkPassword(username, password) {
        return username === 'admin';
    }

    addContact(contact) {
        this.contacts.push(contact);
    }

    addCrewCategory(category) {
        this.crewCategories.push(category);
    }

    static getTestOrganizer() {
        let organizer = new Organizer(0, super.getTestContacts()[0].contactID,
            super.getTestContacts()[0].contactName, super.getTestContacts()[0].phone, super.getTestContacts()[0].email,
            'OrganisatorFirmaet AS', null);
        organizer.addContact(super.getTestContacts()[1]);
        organizer.addContact(super.getTestContacts()[2]);
        organizer.addContact(super.getTestContacts()[3]);
        //organizer.addCrewCategory(CrewLeader.getTestCrewLeader()[0].crewCategory);

        //organizer.addEvent(Event.getTestEvents()[0]);

        return [organizer];
    }
}